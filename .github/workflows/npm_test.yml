name: CI

on:
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:18
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: express_template
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:8-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/express_template?schema=public
      REDIS_URL: redis://localhost:6379
      SESSION_SECRET: test_session_secret_for_ci
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Redis CLI
        run: sudo apt-get update && sudo apt-get install -y redis-tools

      - name: Wait for services to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          until pg_isready -h localhost -p 5432 -U postgres; do
            sleep 2
          done
          echo "PostgreSQL is ready!"

          echo "Waiting for Redis..."
          until redis-cli -h localhost -p 6379 ping; do
            sleep 2
          done
          echo "Redis is ready!"

      - name: Run database migrations
        run: yarn prisma migrate deploy

      - name: Run tests
        run: npm test
